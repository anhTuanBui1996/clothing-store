package com.api.service.entity;

import com.api.service.dto.PermissionDto;
import com.api.service.entity.composite.PermissionKey;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.MapsId;

@Entity
public class Permission extends BaseEntity {

	Id
	
	@EmbeddedId
	private PermissionKey permissionId;

	@ManyToOne(fetch = FetchType.LAZY)
	@MapsId("role")
	@JoinColumn(name = "ROLE_ID")
	Role role;

	@ManyToOne(fetch = FetchType.LAZY)
	@MapsId("menu")
	@JoinColumn(name = "MENU_ID")
	Menu menu;

	@Column(name = "CAN_CREATE")
	private boolean canCreate = false;

	@Column(name = "CAN_READ")
	private boolean canRead = false;

	@Column(name = "CAN_UPDATE")
	private boolean canUpdate = false;

	@Column(name = "CAN_DELETE")
	private boolean canDelete = false;

	public Permission() {

	}

	public Permission(PermissionKey permissionId, Role role, Menu menu, boolean canCreate, boolean canRead,
			boolean canUpdate, boolean canDelete) {
		this.permissionId = permissionId;
		this.role = role;
		this.menu = menu;
		this.canCreate = canCreate;
		this.canRead = canRead;
		this.canUpdate = canUpdate;
		this.canDelete = canDelete;
	}

	public Permission(Role role, Menu menu) {
		this.role = role;
		this.menu = menu;
	}

	public PermissionKey getPermissionId() {
		return permissionId;
	}

	public void setPermissionId(PermissionKey permissionId) {
		this.permissionId = permissionId;
	}

	public Role getRole() {
		return role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	public Menu getMenu() {
		return menu;
	}

	public void setMenu(Menu menu) {
		this.menu = menu;
	}

	public boolean getCanCreate() {
		return canCreate;
	}

	public void setCanCreate(boolean canCreate) {
		this.canCreate = canCreate;
	}

	public boolean getCanRead() {
		return canRead;
	}

	public void setCanRead(boolean canRead) {
		this.canRead = canRead;
	}

	public boolean getCanUpdate() {
		return canUpdate;
	}

	public void setCanUpdate(boolean canUpdate) {
		this.canUpdate = canUpdate;
	}

	public boolean getCanDelete() {
		return canDelete;
	}

	public void setCanDelete(boolean canDelete) {
		this.canDelete = canDelete;
	}

	public PermissionDto convertEntityToDto() {
		PermissionKey key = this.getPermissionId();
		PermissionDto dto = new PermissionDto(key.getId(), key.getCreatedDate(), key.getCreatedBy(),
				key.getLastModifiedDate(), key.getLastModifiedBy());

		dto.setCanCreate(this.getCanCreate());
		dto.setCanRead(this.getCanRead());
		dto.setCanUpdate(this.getCanUpdate());
		dto.setCanDelete(this.getCanDelete());

		return dto;
	}

}
