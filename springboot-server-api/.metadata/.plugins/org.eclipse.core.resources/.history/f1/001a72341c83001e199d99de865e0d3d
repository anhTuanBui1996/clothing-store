package com.api.service.dto;

import java.util.Date;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;

import com.api.service.entity.Role;
import com.api.service.entity.User;
import com.api.service.entity.base.BaseEntity;
import com.api.service.exception.UserServiceCustomException;
import com.api.service.repository.RoleRepository;
import com.api.service.repository.UserRepository;

public class UserDto extends BaseEntity {

	@Autowired
	UserRepository userRepository;

	@Autowired
	RoleRepository roleRepository;

	public UUID id;
	public boolean isAdmin;
	public String email;
	public String firstName;
	public String lastName;
	public boolean isMale;
	public Date dob;
	public String citizenId;

	public UUID roleId;

	public UserDto() {

	}

	public UserDto(UUID id, String email, String firstName, String lastName, boolean isMale, Date dob,
			String citizenId) {
		this.id = id;
		this.email = email;
		this.firstName = firstName;
		this.lastName = lastName;
		this.isMale = isMale;
		this.dob = dob;
		this.citizenId = citizenId;
	}

	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public boolean isAdmin() {
		return isAdmin;
	}

	public void setAdmin(boolean isAdmin) {
		this.isAdmin = isAdmin;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public boolean isMale() {
		return isMale;
	}

	public void setMale(boolean isMale) {
		this.isMale = isMale;
	}

	public Date getDob() {
		return dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	public String getCitizenId() {
		return citizenId;
	}

	public void setCitizenId(String citizenId) {
		this.citizenId = citizenId;
	}

	public User convertDtoToEntity() {
		List<User> entities = userRepository.findById(id);
		User user = entities.get(0);

		user.setCreatedDate(createdDate);
		user.setCreatedBy(createdBy);
		user.setLastModifiedDate(lastModifiedDate);
		user.setLastModifiedBy(lastModifiedBy);

		user.setId(id);
		user.setAdmin(isAdmin);
		user.setCitizenId(citizenId);
		user.setDob(dob);
		user.setEmail(email);
		user.setFirstName(firstName);
		user.setLastName(lastName);
		user.setMale(isMale);

		Role role = roleRepository.findById(roleId)
				.orElseThrow(() -> new UserServiceCustomException("Role with given Id not found", "ROLE_NOT_FOUND"));
		user.setRole(role);

		return user;
	}

}
