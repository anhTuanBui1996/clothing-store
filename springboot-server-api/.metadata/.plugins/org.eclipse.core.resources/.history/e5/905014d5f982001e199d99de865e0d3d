package com.api.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.api.service.entity.Role;
import com.api.service.exception.UserServiceCustomException;
import com.api.service.repository.RoleRepository;

@Service
public class RoleService {
	@Autowired
	RoleRepository roleRepository;

	public Role createRole(Role role) {
		if (roleRepository.findById(role.getId()).isPresent()) {
			throw new UserServiceCustomException("Role with given id already existed", "ROLE_EXISTED");
		}
		return null;
	}

	public List<Role> getAllRole() {
		List<Role> roles = new ArrayList<>();
		roleRepository.findAll().forEach(role -> roles.add(role));
		return roles;
	}

	public Role getRoleById(UUID id) {
		Role role = roleRepository.findById(id)
				.orElseThrow(() -> new UserServiceCustomException("Role with given id not found", "ROLE_NOT_FOUND"));
		return role;
	}

	public Role updateRole(Role role) {
		Role entity = roleRepository.findById(role.getId())
				.orElseThrow(() -> new UserServiceCustomException("Role with given id not found", "ROLE_NOT_FOUND"));
		if (entity != null) {
			return roleRepository.save(role);
		}
		return null;
	}

	public boolean deleteRole(UUID id) {
		if (roleRepository.existsById(id) || id == null) {
			return false;
		}
		roleRepository.deleteById(id);
		return true;
	}
}
